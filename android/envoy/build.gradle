apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

def dnsttDomainProp = ""
def dnsttKeyProp = ""
def dnsttPathProp = ""
def dohUrlProp = ""
def dotAddrProp = ""
def hystCertProp = ""

android {

    if (project.hasProperty("dnsttdomain")) {
        dnsttDomainProp = dnsttdomain
    } else {
        println "WARNING: no dnsttdomain prop found"
    }

    if (project.hasProperty("dnsttkey")) {
        dnsttKeyProp = dnsttkey
    } else {
        println "WARNING: no dnsttkey prop found"
    }

    if (project.hasProperty("dnsttpath")) {
        dnsttPathProp = dnsttpath
    } else {
        println "WARNING: no dnsttpath prop found"
    }

    if (project.hasProperty("dohUrl")) {
        dohUrlProp = dohUrl
    } else {
        println "WARNING: no dohUrl prop found"
    }

    if (project.hasProperty("dotAddr")) {
        dotAddrProp = dotAddr
    } else {
        println "WARNING: no dotAddr prop found"
    }

    if (project.hasProperty("hystcert")) {
        hystCertProp = hystcert
    } else {
        println "WARNING: no hystcert prop found"
    }

    compileSdkVersion 29
    buildToolsVersion '30.0.2'
    //ndkVersion '20.0.5594570'
    ndkVersion '21.0.6113669'

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName '1.0'

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        consumerProguardFiles 'consumer-rules.pro'

        buildConfigField "String", "DNSTT_DOMAIN", "\"$dnsttDomainProp\""
        buildConfigField "String", "DNSTT_KEY", "\"$dnsttKeyProp\""
        buildConfigField "String", "DNSTT_PATH", "\"$dnsttPathProp\""
        buildConfigField "String", "DOH_URL", "\"$dohUrlProp\""
        buildConfigField "String", "DOT_ADDR", "\"$dotAddrProp\""
        buildConfigField "String", "HYST_CERT", "\"$hystCertProp\""
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main.java.srcDirs = ['src/main/kotlin', 'src/test/kotlin']
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
}

dependencies {
    // implementation fileTree(dir: 'libs', include: ['*.jar'])
    // implementation 'androidx.appcompat:appcompat:1.1.0'
    //testImplementation 'junit:junit:4.12'
    //androidTestImplementation 'androidx.test:runner:1.1.1'
    //androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'

    //implementation 'com.google.android.gms:play-services-cronet:17.0.0'
    implementation('com.squareup.okhttp3:okhttp:4.6.0')
    implementation('com.squareup.okhttp3:okhttp-urlconnection:4.4.1')
    //noinspection GradleDependency
    //implementation('com.squareup.okhttp3:okhttp:3.14.8')
    //implementation('com.squareup.okhttp3:okhttp-urlconnection:3.14.8')

    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.4.32'
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.preference:preference-ktx:1.1.1'
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'
    //embed project(path: ':cronet', configuration: 'release')
    releaseImplementation project(path: ':cronet', configuration: 'release')
    debugImplementation project(path: ':cronet', configuration: 'debug')
    // implementation files('libs/cronet.aar')
    implementation 'org.greatfire:IEnvoyProxy:1.2.0'
}
