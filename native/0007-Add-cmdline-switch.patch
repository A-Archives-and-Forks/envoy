 chrome/browser/prefs/chrome_command_line_pref_store.cc | 10 ++++++++++
 chrome/browser/prefs/chrome_command_line_pref_store.h  |  2 ++
 chrome/common/chrome_switches.cc                       |  1 +
 chrome/common/chrome_switches.h                        |  1 +
 4 files changed, 14 insertions(+)

diff --git a/chrome/browser/prefs/chrome_command_line_pref_store.cc b/chrome/browser/prefs/chrome_command_line_pref_store.cc
index 3fdef6b13d1c5..0ae4969c51024 100644
--- a/chrome/browser/prefs/chrome_command_line_pref_store.cc
+++ b/chrome/browser/prefs/chrome_command_line_pref_store.cc
@@ -104,6 +104,7 @@ ChromeCommandLinePrefStore::ChromeCommandLinePrefStore(
   ApplyProxyMode();
   ValidateProxySwitches();
   ApplySSLSwitches();
+  ApplyEnvoyUrlSwitches();
   ApplyBackgroundModeSwitches();
   ApplyExplicitlyAllowedPortSwitch();
 }
@@ -176,6 +177,15 @@ void ChromeCommandLinePrefStore::ApplySSLSwitches() {
   }
 }
 
+void ChromeCommandLinePrefStore::ApplyEnvoyUrlSwitches() {
+  if (command_line()->HasSwitch(switches::kEnvoyUrl)) {
+    std::string envoy_url =
+        command_line()->GetSwitchValueASCII(switches::kEnvoyUrl);
+    SetValue(prefs::kEnvoyUrl, std::make_unique<base::Value>(envoy_url),
+             WriteablePrefStore::DEFAULT_PREF_WRITE_FLAGS);
+  }
+}
+
 void ChromeCommandLinePrefStore::ApplyBackgroundModeSwitches() {
   if (command_line()->HasSwitch(switches::kDisableExtensions)) {
     SetValue(prefs::kBackgroundModeEnabled,
diff --git a/chrome/browser/prefs/chrome_command_line_pref_store.h b/chrome/browser/prefs/chrome_command_line_pref_store.h
index dd5a4e6e82791..433b8cc69cf05 100644
--- a/chrome/browser/prefs/chrome_command_line_pref_store.h
+++ b/chrome/browser/prefs/chrome_command_line_pref_store.h
@@ -40,6 +40,8 @@ class ChromeCommandLinePrefStore : public CommandLinePrefStore {
   // Apply the SSL/TLS preferences from the given switches.
   void ApplySSLSwitches();
 
+  void ApplyEnvoyUrlSwitches();
+
   // Determines whether the background mode is force-disabled.
   void ApplyBackgroundModeSwitches();
 
diff --git a/chrome/common/chrome_switches.cc b/chrome/common/chrome_switches.cc
index e99b41bb748a1..e36dc2159beb7 100644
--- a/chrome/common/chrome_switches.cc
+++ b/chrome/common/chrome_switches.cc
@@ -114,6 +114,7 @@ const char kCheckForUpdateIntervalSec[]     = "check-for-update-interval";
 
 // Comma-separated list of SSL cipher suites to disable.
 const char kCipherSuiteBlacklist[]          = "cipher-suite-blacklist";
+const char kEnvoyUrl[]                      = "envoy-url";
 
 // Comma-separated list of BrowserThreads that cause browser process to crash if
 // the given browser thread is not responsive. UI/IO are the BrowserThreads that
diff --git a/chrome/common/chrome_switches.h b/chrome/common/chrome_switches.h
index f079aad00cedd..cbb857963fc82 100644
--- a/chrome/common/chrome_switches.h
+++ b/chrome/common/chrome_switches.h
@@ -57,6 +57,7 @@ extern const char kAutoSelectDesktopCaptureSource[];
 extern const char kAutoSelectTabCaptureSourceByTitle[];
 extern const char kCheckForUpdateIntervalSec[];
 extern const char kCipherSuiteBlacklist[];
+extern const char kEnvoyUrl[];
 extern const char kCrashOnHangThreads[];
 extern const char kCreateBrowserOnStartupForTests[];
 extern const char kCustomDevtoolsFrontend[];
