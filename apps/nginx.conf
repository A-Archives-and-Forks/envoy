log_format my_upstream '$proxy_protocol_addr - $remote_user [$time_local] '
                       '"$request" $status $body_bytes_sent '
                       '"$http_referer" "$http_user_agent" "$http_host" "$http_url_orig" "$http_host_orig"';

server {
    listen 80;
    listen [::]:80;
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name @@DOMAIN@@;

    access_log /var/log/nginx/@@DOMAIN@@-access.log my_upstream;
    error_log /var/log/nginx/@@DOMAIN@@-error.log;

    ssl_certificate /home/ubuntu/apps/envoy/@@DOMAIN@@.pem;
    ssl_certificate_key /home/ubuntu/apps/envoy/@@DOMAIN@@-key.pem;
    ssl_session_timeout 1d;
    ssl_session_tickets off;

    # openssl dhparam -out  dhparam.pem 2048
    ssl_dhparam /home/ubuntu/apps/envoy/dhparam.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    ssl_stapling off;
    ssl_stapling_verify on;

    # send() failed (111: Connection refused) while resolving, resolver: 127.0.0.1:53
    resolver 8.8.8.8 ipv6=off;

    location ~ ^/p/ {
        #proxy_bind 1.2.3.4;
        proxy_ssl_server_name on;
        proxy_pass $http_url_orig;
        proxy_buffering off; # disable buffer for stream
        proxy_set_header Host $http_host_orig;
        proxy_hide_header Host-Orig;
        proxy_hide_header Url-Orig;
        proxy_pass_request_headers on;
    }

    # curl -H 'Url-Orig: https://en.wikipedia.org/wiki/Main_Page' -H 'Host-Orig: en.wikipedia.org' https://@@DOMAIN@@/wikipedia/?1
    # curl -H 'Url-Orig: https://en.wikipedia.org/wiki/Main_Page' -H 'Host-Orig: en.wikipedia.org' https://@@DOMAIN@@/wikipedia/?2
    location ~ ^/wikipedia/ {
        #proxy_bind 1.2.3.4;
        proxy_ssl_server_name on;
        proxy_pass $http_url_orig;
        proxy_buffering off; # disable buffer for stream
        proxy_set_header Host $http_host_orig;
        proxy_hide_header Host-Orig;
        proxy_hide_header Url-Orig;
        proxy_pass_request_headers on;

        # for lua module, apt install nginx-extras
        rewrite_by_lua_block {
            local upstream_host = ngx.var.http_url_orig:match('^%w+://([^/]+)')
            if upstream_host:sub(-string.len(".wikipedia.org")) ~= ".wikipedia.org" and
                upstream_host:sub(-string.len(".wikimedia.org")) ~= ".wikimedia.org" and
                upstream_host:sub(-string.len(".wikidata.org")) ~= ".wikidata.org" then
                -- ngx.req.set_uri("/error")
                ngx.status = ngx.HTTP_UNAUTHORIZED
                ngx.say("invalid request")
                ngx.log(ngx.ERR, "invalid upstream host:", upstream_host)
                ngx.exit(ngx.HTTP_OK)
            end
        }

        header_filter_by_lua_block {
            ngx.header["x-client-ip"] = nil
        }
    }

    location /static/ {
        alias /home/ubuntu/apps/envoy/staticfiles/;
    }
}
